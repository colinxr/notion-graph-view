{
  "openapi": "3.0.0",
  "paths": {
    "/users": {
      "get": {
        "operationId": "UserController_findAll",
        "summary": "Get all users",
        "parameters": [],
        "responses": {
          "200": {
            "description": "Returns list of all users",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserListDto"
                }
              }
            }
          }
        },
        "tags": [
          "users"
        ],
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/users/clerk/me": {
      "get": {
        "operationId": "UserController_getClerkCurrentUser",
        "summary": "Get current user profile using Clerk authentication",
        "parameters": [],
        "responses": {
          "200": {
            "description": "Returns current user profile",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserDto"
                }
              }
            }
          },
          "404": {
            "description": "User not found"
          }
        },
        "tags": [
          "users"
        ]
      }
    },
    "/users/{id}": {
      "get": {
        "operationId": "UserController_findById",
        "summary": "Get user by ID",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "description": "User ID",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Returns user by ID",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserDto"
                }
              }
            }
          },
          "404": {
            "description": "User not found"
          }
        },
        "tags": [
          "users"
        ],
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/api/v1/notion/databases": {
      "get": {
        "operationId": "NotionDatabaseController_getDatabases",
        "summary": "Get all databases for the authenticated user",
        "description": "Returns a list of Notion databases the user has access to.",
        "parameters": [],
        "responses": {
          "200": {
            "description": "List of databases returned successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/NotionDatabaseDto"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Not authenticated"
          },
          "403": {
            "description": "Not authorized (subscription required)"
          }
        },
        "tags": [
          "notion-databases"
        ],
        "security": [
          {
            "__session": []
          }
        ]
      }
    },
    "/api/v1/notion/databases/{id}": {
      "get": {
        "operationId": "NotionDatabaseController_getDatabase",
        "summary": "Get a specific database by ID",
        "description": "Returns detailed information about a single Notion database.",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "description": "The ID of the database to retrieve",
            "schema": {
              "example": "db_123456789",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Database returned successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NotionDatabaseDto"
                }
              }
            }
          },
          "401": {
            "description": "Not authenticated"
          },
          "403": {
            "description": "Not authorized (subscription required)"
          },
          "404": {
            "description": "Database not found"
          }
        },
        "tags": [
          "notion-databases"
        ],
        "security": [
          {
            "__session": []
          }
        ]
      }
    },
    "/api/v1/notion/databases/{id}/sync": {
      "post": {
        "operationId": "NotionDatabaseController_syncDatabase",
        "summary": "Sync a database with Notion",
        "description": "Updates the local copy of the database with the latest data from Notion.",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "description": "The ID of the database to sync",
            "schema": {
              "example": "db_123456789",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Database sync initiated successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DatabaseSyncResultDto"
                }
              }
            }
          },
          "401": {
            "description": "Not authenticated"
          },
          "403": {
            "description": "Not authorized (subscription required)"
          },
          "404": {
            "description": "Database not found"
          }
        },
        "tags": [
          "notion-databases"
        ],
        "security": [
          {
            "__session": []
          }
        ]
      }
    },
    "/graphs": {
      "post": {
        "operationId": "GraphController_createGraph",
        "summary": "Create a new graph",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateGraphDto"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Graph created successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GraphResponseDto"
                }
              }
            }
          }
        },
        "tags": [
          "Graphs"
        ],
        "security": [
          {
            "bearer": []
          }
        ]
      },
      "get": {
        "operationId": "GraphController_getGraphs",
        "summary": "Get all graphs accessible to the user",
        "parameters": [
          {
            "name": "owned",
            "required": false,
            "in": "query",
            "description": "Filter to only show owned graphs",
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Graphs retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/GraphSummaryResponseDto"
                  }
                }
              }
            }
          }
        },
        "tags": [
          "Graphs"
        ],
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/graphs/public": {
      "get": {
        "operationId": "GraphController_getPublicGraphs",
        "summary": "Get public graphs",
        "parameters": [
          {
            "name": "limit",
            "required": false,
            "in": "query",
            "description": "Maximum number of graphs to return",
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "offset",
            "required": false,
            "in": "query",
            "description": "Number of graphs to skip",
            "schema": {
              "type": "number"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Public graphs retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/GraphSummaryResponseDto"
                  }
                }
              }
            }
          }
        },
        "tags": [
          "Graphs"
        ],
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/graphs/search": {
      "get": {
        "operationId": "GraphController_searchGraphs",
        "summary": "Search for graphs",
        "parameters": [
          {
            "name": "query",
            "required": true,
            "in": "query",
            "description": "Search query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Search results retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/GraphSummaryResponseDto"
                  }
                }
              }
            }
          }
        },
        "tags": [
          "Graphs"
        ],
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/graphs/{id}": {
      "get": {
        "operationId": "GraphController_getGraphById",
        "summary": "Get a graph by ID",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "description": "Graph ID",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Graph retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GraphResponseDto"
                }
              }
            }
          },
          "404": {
            "description": "Graph not found"
          }
        },
        "tags": [
          "Graphs"
        ],
        "security": [
          {
            "bearer": []
          }
        ]
      },
      "put": {
        "operationId": "GraphController_updateGraph",
        "summary": "Update a graph",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "description": "Graph ID",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateGraphDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Graph updated successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GraphResponseDto"
                }
              }
            }
          },
          "404": {
            "description": "Graph not found"
          }
        },
        "tags": [
          "Graphs"
        ],
        "security": [
          {
            "bearer": []
          }
        ]
      },
      "delete": {
        "operationId": "GraphController_deleteGraph",
        "summary": "Delete a graph",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "description": "Graph ID",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Graph deleted successfully"
          },
          "404": {
            "description": "Graph not found"
          }
        },
        "tags": [
          "Graphs"
        ],
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/graphs/{id}/nodes": {
      "post": {
        "operationId": "GraphController_addNode",
        "summary": "Add a node to a graph",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "description": "Graph ID",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateNodeDto"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Node added successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GraphResponseDto"
                }
              }
            }
          }
        },
        "tags": [
          "Graphs"
        ],
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/graphs/{id}/nodes/{nodeId}": {
      "put": {
        "operationId": "GraphController_updateNode",
        "summary": "Update a node in a graph",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "description": "Graph ID",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "nodeId",
            "required": true,
            "in": "path",
            "description": "Node ID",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateNodeDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Node updated successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GraphResponseDto"
                }
              }
            }
          }
        },
        "tags": [
          "Graphs"
        ],
        "security": [
          {
            "bearer": []
          }
        ]
      },
      "delete": {
        "operationId": "GraphController_removeNode",
        "summary": "Remove a node from a graph",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "description": "Graph ID",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "nodeId",
            "required": true,
            "in": "path",
            "description": "Node ID",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Node removed successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GraphResponseDto"
                }
              }
            }
          }
        },
        "tags": [
          "Graphs"
        ],
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/graphs/{id}/edges": {
      "post": {
        "operationId": "GraphController_addEdge",
        "summary": "Add an edge to a graph",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "description": "Graph ID",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateEdgeDto"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Edge added successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GraphResponseDto"
                }
              }
            }
          }
        },
        "tags": [
          "Graphs"
        ],
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/graphs/{id}/edges/{edgeId}": {
      "put": {
        "operationId": "GraphController_updateEdge",
        "summary": "Update an edge in a graph",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "description": "Graph ID",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "edgeId",
            "required": true,
            "in": "path",
            "description": "Edge ID",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateEdgeDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Edge updated successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GraphResponseDto"
                }
              }
            }
          }
        },
        "tags": [
          "Graphs"
        ],
        "security": [
          {
            "bearer": []
          }
        ]
      },
      "delete": {
        "operationId": "GraphController_removeEdge",
        "summary": "Remove an edge from a graph",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "description": "Graph ID",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "edgeId",
            "required": true,
            "in": "path",
            "description": "Edge ID",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Edge removed successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GraphResponseDto"
                }
              }
            }
          }
        },
        "tags": [
          "Graphs"
        ],
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/graphs/generate/database/{databaseId}": {
      "post": {
        "operationId": "GraphController_generateFromDatabase",
        "summary": "Generate a graph from a Notion database",
        "parameters": [
          {
            "name": "databaseId",
            "required": true,
            "in": "path",
            "description": "Notion database ID",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "name",
            "required": true,
            "in": "query",
            "description": "Name for the generated graph",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "description",
            "required": false,
            "in": "query",
            "description": "Description for the generated graph",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "maxDepth",
            "required": false,
            "in": "query",
            "description": "Maximum depth for backlink traversal",
            "schema": {
              "type": "number"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Graph generated successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GraphResponseDto"
                }
              }
            }
          }
        },
        "tags": [
          "Graphs"
        ],
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/graphs/generate/page/{pageId}": {
      "post": {
        "operationId": "GraphController_generateFromPage",
        "summary": "Generate a graph from a Notion page and its backlinks",
        "parameters": [
          {
            "name": "pageId",
            "required": true,
            "in": "path",
            "description": "Notion page ID",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "name",
            "required": true,
            "in": "query",
            "description": "Name for the generated graph",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "description",
            "required": false,
            "in": "query",
            "description": "Description for the generated graph",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "maxDepth",
            "required": false,
            "in": "query",
            "description": "Maximum depth for backlink traversal",
            "schema": {
              "type": "number"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Graph generated successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GraphResponseDto"
                }
              }
            }
          }
        },
        "tags": [
          "Graphs"
        ],
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/graphs/combine": {
      "post": {
        "operationId": "GraphController_combineGraphs",
        "summary": "Combine multiple graphs into a new graph",
        "parameters": [
          {
            "name": "name",
            "required": true,
            "in": "query",
            "description": "Name for the combined graph",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "description",
            "required": false,
            "in": "query",
            "description": "Description for the combined graph",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Graphs combined successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GraphResponseDto"
                }
              }
            }
          }
        },
        "tags": [
          "Graphs"
        ],
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/graphs/{id}/share": {
      "post": {
        "operationId": "SharingController_shareGraph",
        "summary": "Share a graph with other users",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "description": "Graph ID",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ShareGraphDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Graph shared successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GraphResponseDto"
                }
              }
            }
          },
          "403": {
            "description": "Not authorized to share this graph"
          },
          "404": {
            "description": "Graph not found"
          }
        },
        "tags": [
          "Graph Sharing"
        ],
        "security": [
          {
            "bearer": []
          }
        ]
      },
      "delete": {
        "operationId": "SharingController_removeSharing",
        "summary": "Remove sharing for a graph",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "description": "Graph ID",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Sharing removed successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GraphResponseDto"
                }
              }
            }
          },
          "403": {
            "description": "Not authorized to modify sharing for this graph"
          },
          "404": {
            "description": "Graph not found"
          }
        },
        "tags": [
          "Graph Sharing"
        ],
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/graphs/{id}/public": {
      "post": {
        "operationId": "SharingController_setPublicVisibility",
        "summary": "Set public visibility for a graph",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "description": "Graph ID",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SetPublicVisibilityDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Public visibility set successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GraphResponseDto"
                }
              }
            }
          },
          "403": {
            "description": "Not authorized to modify this graph"
          },
          "404": {
            "description": "Graph not found"
          }
        },
        "tags": [
          "Graph Sharing"
        ],
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/graphs/{id}/shared-users": {
      "get": {
        "operationId": "SharingController_getSharedUsers",
        "summary": "Get users with whom a graph is shared",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "description": "Graph ID",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Shared users retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "string"
                      },
                      "name": {
                        "type": "string"
                      },
                      "email": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Not authorized to view this graph"
          },
          "404": {
            "description": "Graph not found"
          }
        },
        "tags": [
          "Graph Sharing"
        ],
        "security": [
          {
            "bearer": []
          }
        ]
      }
    }
  },
  "info": {
    "title": "Notion Graph View API",
    "description": "API Documentation for the Notion Graph View application",
    "version": "1.0",
    "contact": {}
  },
  "tags": [
    {
      "name": "notion-databases",
      "description": "Operations related to Notion databases"
    },
    {
      "name": "notion-pages",
      "description": "Operations related to Notion pages and their backlinks"
    },
    {
      "name": "authentication",
      "description": "Authentication and authorization operations"
    }
  ],
  "servers": [],
  "components": {
    "securitySchemes": {
      "JWT-auth": {
        "scheme": "bearer",
        "bearerFormat": "JWT",
        "type": "http",
        "description": "Enter JWT token"
      }
    },
    "schemas": {
      "UserDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "example": "123e4567-e89b-12d3-a456-426614174000"
          },
          "email": {
            "type": "string",
            "example": "john.doe@example.com"
          },
          "name": {
            "type": "string",
            "example": "John Doe"
          },
          "isAuthenticated": {
            "type": "boolean",
            "example": true
          },
          "hasNotionAccess": {
            "type": "boolean",
            "example": true
          },
          "createdAt": {
            "format": "date-time",
            "type": "string",
            "example": "2024-03-07T12:00:00Z"
          },
          "updatedAt": {
            "format": "date-time",
            "type": "string",
            "example": "2024-03-07T12:00:00Z"
          }
        },
        "required": [
          "id",
          "email",
          "name",
          "isAuthenticated",
          "hasNotionAccess",
          "createdAt",
          "updatedAt"
        ]
      },
      "UserListDto": {
        "type": "object",
        "properties": {
          "users": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/UserDto"
            }
          },
          "total": {
            "type": "number",
            "example": 10
          }
        },
        "required": [
          "users",
          "total"
        ]
      },
      "NotionDatabaseDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Unique identifier for the database",
            "example": "db_123456789"
          },
          "title": {
            "type": "string",
            "description": "Title of the database",
            "example": "Project Tasks"
          },
          "workspaceId": {
            "type": "string",
            "description": "ID of the workspace that contains the database",
            "example": "ws_123456789"
          },
          "ownerId": {
            "type": "string",
            "description": "ID of the database owner",
            "example": "user_123456789"
          },
          "lastSyncedAt": {
            "format": "date-time",
            "type": "string",
            "description": "Timestamp of the last synchronization with Notion",
            "example": "2023-01-15T12:30:45.123Z"
          },
          "description": {
            "type": "string",
            "description": "Optional description of the database",
            "example": "This database contains all project tasks"
          },
          "url": {
            "type": "string",
            "description": "URL to the database in Notion",
            "example": "https://notion.so/workspace/db-123456789"
          },
          "createdAt": {
            "format": "date-time",
            "type": "string",
            "description": "Timestamp when the database was created",
            "example": "2023-01-01T10:00:00.000Z"
          },
          "updatedAt": {
            "format": "date-time",
            "type": "string",
            "description": "Timestamp when the database was last updated",
            "example": "2023-01-15T12:30:45.123Z"
          },
          "pageCount": {
            "type": "number",
            "description": "Number of pages in the database",
            "example": 42
          }
        },
        "required": [
          "id",
          "title",
          "workspaceId",
          "ownerId",
          "lastSyncedAt",
          "createdAt",
          "updatedAt"
        ]
      },
      "DatabaseSyncResultDto": {
        "type": "object",
        "properties": {
          "databaseId": {
            "type": "string",
            "description": "ID of the database that was synced",
            "example": "db_123456789"
          },
          "newPages": {
            "type": "number",
            "description": "Number of new pages created during sync",
            "example": 5
          },
          "updatedPages": {
            "type": "number",
            "description": "Number of existing pages updated during sync",
            "example": 10
          },
          "totalPages": {
            "type": "number",
            "description": "Total number of pages in the database",
            "example": 42
          },
          "syncedAt": {
            "format": "date-time",
            "type": "string",
            "description": "Timestamp when the sync was completed",
            "example": "2023-01-15T12:30:45.123Z"
          }
        },
        "required": [
          "databaseId",
          "newPages",
          "updatedPages",
          "totalPages",
          "syncedAt"
        ]
      },
      "CreateGraphDto": {
        "type": "object",
        "properties": {}
      },
      "GraphResponseDto": {
        "type": "object",
        "properties": {}
      },
      "GraphSummaryResponseDto": {
        "type": "object",
        "properties": {}
      },
      "UpdateGraphDto": {
        "type": "object",
        "properties": {}
      },
      "CreateNodeDto": {
        "type": "object",
        "properties": {}
      },
      "UpdateNodeDto": {
        "type": "object",
        "properties": {}
      },
      "CreateEdgeDto": {
        "type": "object",
        "properties": {}
      },
      "UpdateEdgeDto": {
        "type": "object",
        "properties": {}
      },
      "ShareGraphDto": {
        "type": "object",
        "properties": {}
      },
      "SetPublicVisibilityDto": {
        "type": "object",
        "properties": {}
      }
    }
  }
}